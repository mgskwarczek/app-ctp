import pandas as pd
import matplotlib.pyplot as plt
from matplotlib.animation import FuncAnimation
import tkinter as tk
from tkinter import filedialog


def generate_signal(U, a):
    return [a * u for u in U]



def load_data(filename):
    df = pd.read_excel(filename, header=None)
    return df.iloc[:, 0].tolist(), df.iloc[:, 1].tolist()


def init_plot(max_displacement):
    fig, ax = plt.subplots()
    ax.set_xlabel('Time')
    ax.set_ylabel('WF(t)')
    ax.set_xlim(0, 20)
    ax.set_ylim(0, max_displacement)
    return fig, ax


def update_plot(frame, original_time, original_U, a, ax, extended_time, extended_U):
    if frame >= len(original_time):
        # Rozszerzanie danych, dodawanie wartości z początku na koniec
        extended_time.append(extended_time[-1] + (original_time[1] - original_time[0]))
        extended_U.append(original_U[frame % len(original_U)])

    ax.clear()
    ax.set_xlabel('Time')
    ax.set_ylabel('WF(t)')

    # Ustawianie zakresu osi X
    ax.set_xlim(max(0, extended_time[frame] - 20), max(20, extended_time[frame]))

    # Rysowanie wykresu
    ax.plot(extended_time[:frame + 1], generate_signal(extended_U[:frame + 1], a), color='blue')


def select_file():
    a_str = entry_a.get()
    if a_str.strip():
        a = float(a_str)
        max_displacement_str = entry_max_displacement.get()
        if max_displacement_str.strip():
            max_displacement = float(max_displacement_str)
            filename = filedialog.askopenfilename(filetypes=[('Excel files', '*.xlsx')])
            time, U = load_data(filename)
            extended_time, extended_U = time.copy(), U.copy()
            fig, ax = init_plot(max_displacement)
            ani = FuncAnimation(fig, update_plot, frames=len(time) * 5,
                                fargs=(time, U, a, ax, extended_time, extended_U), interval=20)
            plt.show()
        else:
            tk.messagebox.showerror("Error", "Please enter a value for maximum displacement.")
    else:
        tk.messagebox.showerror("Error", "Please enter a value for coefficient 'a'.")


root = tk.Tk()
root.title('Real-time WF(t) Plot')

label_a = tk.Label(root, text='Enter the value of coefficient a:')
label_a.pack()

entry_a = tk.Entry(root)
entry_a.pack()

label_max_displacement = tk.Label(root, text='Enter the maximum displacement:')
label_max_displacement.pack()

entry_max_displacement = tk.Entry(root)
entry_max_displacement.pack()

select_button = tk.Button(root, text='Select File', command=select_file)
select_button.pack()

root.mainloop()
